<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * True-false question renderer class.
 *
 * @package    qtype
 * @subpackage usercode
 * @copyright  2009 The Open University
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */


defined('MOODLE_INTERNAL') || die();


/**
 * Generates the output for true-false questions.
 *
 * @copyright  2009 The Open University
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
class qtype_usercode_renderer extends qtype_renderer 
{
    /**
     * Print the main formulation and controls for a UserCode session.
     * 
     * @param question_attempt $qa 
     * @param question_display_options $options 
     * @return void
     */
    public function formulation_and_controls(question_attempt $qa, question_display_options $options) 
    {
        //access the global page object
        global $PAGE, $CFG;

        //get the question, and the user's last response
        $question = $qa->get_question();
        $response = $qa->get_last_qt_var('answer', '');

        //get the field name that should be used to submit the answer code
        $name = $qa->get_qt_field_name('answer');

        //add the core text-area for user response
        $output = html_writer::tag('textarea', htmlentities($response), array('name' => $name, 'id' => $name));

        //tell Moodle where to find the current codemirror theme data
        html_writer::empty_tag('link', array('rel' => 'stylesheet', 'href' => $CFG->wwwroot.'/scripts/codemirror/codemirror.css'));
        html_writer::empty_tag('link', array('rel' => 'stylesheet', 'href' => $CFG->wwwroot.'/scripts/codemirror/default.css'));
            
        //tell Moodle where to find the core codemirror code
        $PAGE->requires->js('/scripts/codemirror/codemirror.js');

        //and tell Moodle where to find the language definition
        switch($question->system)
        {
            //assume we're working with the HCS08
            default:
                $PAGE->requires->js('/scripts/codemirror/hcs08.js');
        }

        //insert a small block of initialization script, which will initialize codemirror
        $codemirror = 
            ' var editor = CodeMirror.fromTextArea(document.getElementById("'.$name.'"), {
                    lineNumbers: true,
                    matchBrackets: false,
                    theme: \'elegant\',
                    mode: \'text/asm-hcs08\'
                }); ';
        $PAGE->requires->js_init_code($codemirror, true);


        return $output;
    }

}
